[{"path":"https://cidm-ph.github.io/jentre/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Western Sydney Local Health District, NSW Health Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cidm-ph.github.io/jentre/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Suster. Author, maintainer. Western Sydney Local Health District, NSW Health. Copyright holder.","code":""},{"path":"https://cidm-ph.github.io/jentre/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Suster C (2025). jentre: Toolkit 'Entrez' API. R package version 0.0.0.9000, https://github.com/cidm-ph/jentre.","code":"@Manual{,   title = {jentre: Toolkit for the 'Entrez' API},   author = {Carl Suster},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/cidm-ph/jentre}, }"},{"path":"https://cidm-ph.github.io/jentre/index.html","id":"jentre","dir":"","previous_headings":"","what":"Toolkit for the Entrez API","title":"Toolkit for the Entrez API","text":"jentre client NCBI’s Entrez API. Entrez API many quirks. jentre attempts deal presenting convenient interface. designed bulk metadata fetching link traversal, though also provides full access parts Entrez, albeit fewer helpers. Features jentre: Provides objects representing sets Entrez identifiers avoid mixing Batches requests behind scenes needed Based {httr2} {xml2} {rentrez} package mature might suit broader set applications.","code":""},{"path":"https://cidm-ph.github.io/jentre/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Toolkit for the Entrez API","text":"can install development version jentre like :","code":"# development version install.packages('jentre', repos = c('https://cidm-ph.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://cidm-ph.github.io/jentre/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Toolkit for the Entrez API","text":"","code":"library(jentre)  # Searches by default use the Entrez history server for efficiency: results <- esearch(\"Corynebacterium diphtheriae[orgn]\", \"biosample\") #> ℹ eSearch query \"\\\"Corynebacterium diphtheriae\\\"[Organism]\" has 4124 results results #> <entrez@/biosample[1]> #> [1] MCID_68491.#1[4124]  # The returned object keeps track of which database the UIDs belong to, # and whether the UIDs are local or on the history server. This makes # them easier and less error-prone to use: links <- elink(results, \"sra\") links #> # A tibble: 1 × 3 #>   from            linkname      to          #>   <list>          <chr>         <list>      #> 1 <idlst [4,124]> biosample_sra <wbhst [1]>  # You can pull a list of UIDs from the history server: ids <- as_id_list(links$to[[1]])  # This is a vector with some extra metadata attached, but can be # subsetted normally: head(ids, n = 10) #> <entrez/sra[10]> #>  [1] 38889263 38768719 38768704 38641044 38501020 38428896 38428225 38427762 #>  [9] 38401944 38401943 as.character(ids[4:8]) #> [1] \"38641044\" \"38501020\" \"38428896\" \"38428225\" \"38427762\"  # For endpoints with richer data, you can provide an function to # extract data you care about from the XML document. The output is # combined if multiple API requests are needed, so you can end up # with a single combined data frame, list, or vector: esummary(   ids[1:20],   .process = function(doc) {     xml2::xml_find_all(doc, \"//DocumentSummary/CreateDate\") |> xml2::xml_text()   } ) #>  [1] \"2025/05/29\" \"2025/05/21\" \"2025/05/21\" \"2025/05/14\" \"2025/05/05\" #>  [6] \"2025/04/30\" \"2025/04/30\" \"2025/04/30\" \"2025/04/29\" \"2025/04/29\" #> [11] \"2025/04/29\" \"2025/04/29\" \"2025/04/29\" \"2025/04/29\" \"2025/04/29\" #> [16] \"2025/04/29\" \"2025/04/29\" \"2025/04/21\" \"2025/04/21\" \"2025/04/21\"  # If needed, you can construct an arbitrary request: req <- entrez_request(\"esearch.fcgi\", db = \"nucleotide\", term = \"biomol+trna[prop]\") # You'll need to execute and parse it yourself: httr2::req_perform(req) |> httr2::resp_body_xml() #> {xml_document} #> <eSearchResult> #> [1] <Count>1012<\/Count> #> [2] <RetMax>20<\/RetMax> #> [3] <RetStart>0<\/RetStart> #> [4] <IdList>\\n  <Id>2737963026<\/Id>\\n  <Id>2586967820<\/Id>\\n  <Id>2274792564< ... #> [5] <TranslationSet/> #> [6] <TranslationStack>\\n  <TermSet>\\n    <Term>biomol+trna[prop]<\/Term>\\n     ... #> [7] <QueryTranslation>biomol+trna[prop]<\/QueryTranslation>"},{"path":"https://cidm-ph.github.io/jentre/reference/check_id_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Check ID set is well formed — check_id_set","title":"Check ID set is well formed — check_id_set","text":"Check ID set well formed","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/check_id_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check ID set is well formed — check_id_set","text":"","code":"check_id_set(   x,   database = NULL,   arg = rlang::caller_arg(x),   call = rlang::caller_env() )  check_id_list(x, arg = rlang::caller_arg(x), call = rlang::caller_env())  check_web_history(x, arg = rlang::caller_arg(x), call = rlang::caller_env())  entrez_database(x)"},{"path":"https://cidm-ph.github.io/jentre/reference/check_id_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check ID set is well formed — check_id_set","text":"x ID set object. database name intended database. NULL database name checked. arg name argument use error reporting. call execution environment, error reporting. See rlang::topic-error-call call argument cli::cli_abort().","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/check_id_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check ID set is well formed — check_id_set","text":"check_*, function raise error check fails. entrez_database() name database.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/efetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch records from Entrez — efetch","title":"Fetch records from Entrez — efetch","text":"Fetching can slow, Entrez time requests take long. helper supports pagination specify retmax.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/efetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch records from Entrez — efetch","text":"","code":"efetch(   id_set,   ...,   retstart = 0L,   retmax = NA,   retmode = \"xml\",   rettype = NULL,   .method = NA,   .cookies = NA,   .paginate = 200L,   .process = NA,   .progress = \"Fetching\",   .path = NULL,   .call = rlang::current_env() )"},{"path":"https://cidm-ph.github.io/jentre/reference/efetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch records from Entrez — efetch","text":"id_set ID set object. ... additional API parameters (refer Entrez documentation). set NULL removed. retstart integer: index first result (starts 0). retmax integer: maximum number results return. NA returns results. NULL, uses Entrez default (typically 20). Note using pagination web history, possible slightly retmax results returned. retmode character: requested document file format. rettype character: requested document type. .method HTTP verb. NA, sensible default chosen based request parameters. .cookies path persist cookies. NULL, cookies added request. helper functions: NA, temporary file created (case , temporary file cleaned requests performed). .paginate controls multiple API requests used complete call. Pagination performed using retstart retmax API parameters. set integer, .pagniate items requested per API call. FALSE 0, one API request sent. .process function processes API results. Can function builtin processor described process. Additional builtin processors available: \"uilist\" extract list IDs (suitable rettype = \"uilist\"), NA use sensible choice based parameters. particular, \"uilist\" requests, return id_list object. .progress controls progress bar; see progress argument httr2::req_perform_iterative(). .path path specification saving raw responses. See path argument httr2::req_perform_iterative(). .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/efetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch records from Entrez — efetch","text":"output .process page results, combined vctrs::list_unchop().","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/einfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get details about Entrez databases — einfo","title":"Get details about Entrez databases — einfo","text":"functions call EInfo endpoint. einfo() provides number entries databases, name description, list terms usable query syntax, list link names usable ELink endpoint.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/einfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get details about Entrez databases — einfo","text":"","code":"einfo(db, ..., retmode = \"xml\", version = \"2.0\", .call = rlang::current_env())  einfo_databases(..., retmode = \"xml\", .call = rlang::current_env())"},{"path":"https://cidm-ph.github.io/jentre/reference/einfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get details about Entrez databases — einfo","text":"db name database provide information . ... additional API parameters (refer Entrez documentation). set NULL removed. retmode response format. version response format version. .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/einfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get details about Entrez databases — einfo","text":"Character vector database names einfo_databases(). XML document root node <eInfoResult> einfo().","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/elink.html","id":null,"dir":"Reference","previous_headings":"","what":"ELink API for fetching links between databases — elink","title":"ELink API for fetching links between databases — elink","text":"elink() offers direct access ELink API endpoint, many different input output formats depending parameters. just want one--one mapping neighbor links, use elink_map(), handles .","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/elink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ELink API for fetching links between databases — elink","text":"","code":"elink(   id_set,   db,   ...,   retmode = \"xml\",   cmd = NA,   .paginate = 100L,   .process = NA,   .method = NA,   .multi = \"explode\",   .progress = TRUE,   .cookies = NA,   .path = NULL,   .call = current_env() )  elink_map(id_set, db, ..., .cookies = NA, .path = NULL, .call = current_env())"},{"path":"https://cidm-ph.github.io/jentre/reference/elink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ELink API for fetching links between databases — elink","text":"id_set ID set object. db target database name. ... additional API parameters (refer Entrez documentation). set NULL removed. retmode response format. cmd ELink command. NA either \"neighbor\" \"neighbor_history\" used based type input. .paginate maximum number UIDs submit per request. .paginate applies id_set explicit list. Set FALSE prevent batching. .process function processes API results. Can function builtin processor described process. Additional builtin processors available: \"sets\" get data frame ID set objects, \"flat\" get data frame UIDs, NA use sensible choice based parameters. .method HTTP verb. \"POST\", params vector values (usually just id) sent request body instead URL. .multi controls repeated params handled (see httr2::req_url_query()). .progress controls progress bar; see progress argument httr2::req_perform_iterative(). .cookies path persist cookies. NULL, cookies added request. helper functions: NA, temporary file created (case , temporary file cleaned requests performed). .path path specification saving raw responses. See path argument httr2::req_perform_iterative(). .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/elink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ELink API for fetching links between databases — elink","text":"concatenated output .process. elink(.process = \"sets\") data frame columns Source link set. Target link set. linkname Link name (see https://eutils.ncbi.nlm.nih.gov/entrez/query/static/entrezlinks.html einfo). elink_map() elink(.process = \"flat\") data frame columns db_from Source database name. id_from Source identifier. Can list column depending elink called. db_to Target database name. linkname Link name (see https://eutils.ncbi.nlm.nih.gov/entrez/query/static/entrezlinks.html einfo). id_to Target identifier. general list column.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/elink.html","id":"one-to-one-mapping","dir":"Reference","previous_headings":"","what":"One-to-one mapping","title":"ELink API for fetching links between databases — elink","text":"Note ways calling API multiple UIDs result one--one association input output sets getting lost. way around specify ID separate parameter rather single comma-separated param. handled default choice .multi = \"explode\". using web history token input, corresponding way ensure one--one mapping. ensure result always one--one, use elink_map(), may make several API requests achieve result.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of entries in an ID set — entrez_count","title":"Count the number of entries in an ID set — entrez_count","text":"id_set id_list equivalent length(). web_history, may involve Entrez API call get number entries. case result cached subsequent calls hit API .","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of entries in an ID set — entrez_count","text":"","code":"entrez_count(id_set, .call = current_env())"},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of entries in an ID set — entrez_count","text":"id_set ID set object. .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of entries in an ID set — entrez_count","text":"integer number entries.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a request to the Entrez API — entrez_request","title":"Construct a request to the Entrez API — entrez_request","text":"low-level helper builds request object perform request. general likely use higher-level methods like efetch() instead.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a request to the Entrez API — entrez_request","text":"","code":"entrez_request(   endpoint,   ...,   .method = \"GET\",   .multi = \"comma\",   .cookies = NULL,   .verbose = getOption(\"jentre.verbose\", default = TRUE),   .call = current_env() )  entrez_api_key(default = NULL)"},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a request to the Entrez API — entrez_request","text":"endpoint Entrez endpoint name (e.g. \"efetch.fcgi\"). ... additional API parameters (refer Entrez documentation). set NULL removed. .method HTTP verb. \"POST\", params vector values (usually just id) sent request body instead URL. .multi controls repeated params handled (see httr2::req_url_query()). .cookies path persist cookies. NULL, cookies added request. helper functions: NA, temporary file created (case , temporary file cleaned requests performed). .verbose logical: TRUE logs API requests messages compact format. uses summarised format include request body POST. Use normal httr verbosity controls (e.g. httr2::local_verbosity()) override behaviour see details. .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages. default default value return global configuration found.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a request to the Entrez API — entrez_request","text":"entrez_request() httr2::request object. entrez_api_key(), API key character, default global config exists.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_request.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a request to the Entrez API — entrez_request","text":"email, tool, api_key default values can overridden, can removed setting NULL.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_request.html","id":"api-limits","dir":"Reference","previous_headings":"","what":"API limits","title":"Construct a request to the Entrez API — entrez_request","text":"Entrez APIs rate limited. Requests package respect API headers returned Entrez. Without API key rate limited aggressively, recommended obtain API key. jentre searches API key following order: API parameter entrez_key provided API request function, option \"jentre.api_key\", environment variable ENTREZ_KEY. can check value found properly using entrez_api_key(). API key set, warning displayed. can suppressed setting option \"jentre.silence_api_warning\" TRUE.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up accessions and other IDs on Entrez — entrez_validate","title":"Look up accessions and other IDs on Entrez — entrez_validate","text":"Passes provided IDs Entrez effect normalising accepted UIDs, removing invalid UIDs. web history lists, forces results freshly downloaded (unlike as_id_list() can use cached results).","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up accessions and other IDs on Entrez — entrez_validate","text":"","code":"entrez_validate(id_set, .paginate = 5000L, .path = NULL, .call = current_env())"},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up accessions and other IDs on Entrez — entrez_validate","text":"id_set id_list object. .paginate controls multiple API requests used complete call. Pagination performed using retstart retmax API parameters. set integer, .pagniate items requested per API call. FALSE 0, one API request sent. .path path specification saving raw responses. .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/entrez_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up accessions and other IDs on Entrez — entrez_validate","text":"id_list object","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/epost.html","id":null,"dir":"Reference","previous_headings":"","what":"Register UIDs with the Entrez history server — epost","title":"Register UIDs with the Entrez history server — epost","text":"Register UIDs Entrez history server","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/epost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register UIDs with the Entrez history server — epost","text":"","code":"epost(id_set, ..., WebEnv = NULL, .path = NULL, .call = rlang::current_env())"},{"path":"https://cidm-ph.github.io/jentre/reference/epost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register UIDs with the Entrez history server — epost","text":"id_set id_list object. ... additional API parameters (refer Entrez documentation). set NULL removed. WebEnv either character pass -, web_history object. .path path specification saving raw responses. .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/esearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Entrez databases — esearch","title":"Search Entrez databases — esearch","text":"search term field names documented EInfo API endpoint: see einfo().","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/esearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Entrez databases — esearch","text":"","code":"esearch(   term,   db,   ...,   retstart = 0L,   retmax = NA,   retmode = \"xml\",   rettype = \"uilist\",   usehistory = is.null(retmax) || is.na(retmax),   WebEnv = NULL,   query_key = NULL,   .cookies = NA,   .paginate = 10000L,   .progress = \"ESearch\",   .path = NULL,   .verbose = getOption(\"jentre.verbose\", default = TRUE),   .call = current_env() )"},{"path":"https://cidm-ph.github.io/jentre/reference/esearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Entrez databases — esearch","text":"term search query. db Entrez database name. ... additional API parameters (refer Entrez documentation). set NULL removed. retstart integer: index first result (starts 0). Ignored usehistory TRUE. retmax integer: maximum number results return. NA returns results. NULL, uses Entrez default (typically 20). Note possible slightly retmax results returned paginating. Ignored usehistory TRUE. retmode character: currently \"xml\" supported. rettype character: currently \"uilist\" supported. usehistory logical: TRUE use history server return result. WebEnv, query_key either characters pass -, web_history objects. .cookies path persist cookies. NULL, cookies added request. helper functions: NA, temporary file created (case , temporary file cleaned requests performed). .paginate controls multiple API requests used complete call. Pagination performed using retstart retmax API parameters. set integer, .pagniate items requested per API call. FALSE 0, one API request sent. Ignored usehistory TRUE. .progress controls progress bar; see progress argument httr2::req_perform_iterative(). .path path specification saving raw responses. See path argument httr2::req_perform_iterative(). .verbose logical: TRUE logs API requests messages compact format. uses summarised format include request body POST. Use normal httr verbosity controls (e.g. httr2::local_verbosity()) override behaviour see details. .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/esearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Entrez databases — esearch","text":"id set object (either web_history id_list).","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/esummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch document summaries from Entrez — esummary","title":"Fetch document summaries from Entrez — esummary","text":"ESummary faster EFetch interacts frontend rather full database. contains limited information. Consider adding version = \"2.0\" request revised output format.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/esummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch document summaries from Entrez — esummary","text":"","code":"esummary(   id_set,   ...,   retstart = 0L,   retmax = NA,   retmode = \"xml\",   version = \"2.0\",   .method = NA,   .cookies = NA,   .paginate = 5000L,   .process = \"identity\",   .progress = \"Fetching summaries\",   .path = NULL,   .call = rlang::current_env() )"},{"path":"https://cidm-ph.github.io/jentre/reference/esummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch document summaries from Entrez — esummary","text":"id_set ID set object. ... additional API parameters (refer Entrez documentation). set NULL removed. retstart integer: index first result (starts 0). retmax integer: maximum number results return. NA returns results. NULL, uses Entrez default (typically 20). Note using pagination web history, possible slightly retmax results returned. retmode character: requested document file format. version character: requested format version. .method HTTP verb. NA, sensible default chosen based request parameters. .cookies path persist cookies. NULL, cookies added request. helper functions: NA, temporary file created (case , temporary file cleaned requests performed). .paginate controls multiple API requests used complete call. Pagination performed using retstart retmax API parameters. set integer, .pagniate items requested per API call. FALSE 0, one API request sent. .process function processes API results. Can function builtin processor described process. Additional builtin processors available: \"uilist\" extract list IDs (suitable rettype = \"uilist\"), NA use sensible choice based parameters. particular, \"uilist\" requests, return id_list object. .progress controls progress bar; see progress argument httr2::req_perform_iterative(). .path path specification saving raw responses. See path argument httr2::req_perform_iterative(). .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/id_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Entrez identifier sets — id_list","title":"Entrez identifier sets — id_list","text":"Many Entrez APIs accept either UID list tokens point result stored history server. classes wrap keep track database name identifiers belong . API helpers package generic type ID set can used way either type. large numbers UIDs, web history versions generally recommended avoid running server-side request timeouts.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/id_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entrez identifier sets — id_list","text":"","code":"id_list(db, ids = character())  web_history(db, WebEnv, query_key, length = NA)  is_id_set(x)  is_id_list(x)  is_web_history(x)  as_id_list(x, .paginate = 5000L, .path = NULL, .call = current_env())"},{"path":"https://cidm-ph.github.io/jentre/reference/id_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entrez identifier sets — id_list","text":"db name associated Entrez database (e.g. \"biosample\"). ids UIDs, coercible character vector (can accessions GI numbers). query_key, WebEnv history server tokens returned another Entrez API call. length number UIDs set, known. x object test convert. .paginate controls multiple API requests used complete call. Pagination performed using retstart retmax API parameters. set integer, .pagniate items requested per API call. FALSE 0, one API request sent. Ignored usehistory TRUE. .path path specification saving raw responses. See path argument httr2::req_perform_iterative(). .call call environment use error messages/traces. See rlang::topic-error-call call argument cli::cli_abort(). need specify internal helper functions need mentioned error messages.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/id_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entrez identifier sets — id_list","text":"id_list() as_id_list() id_list vector. web_history() web_history object. is_id_set(), is_id_list(), is_web_history() logical.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/id_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Entrez identifier sets — id_list","text":"id_list vector can manipulated take subsets (e.g. id_set[1:10] tail(id_set)). web_history opaque reference ID list stored Entrez history server. course API calls, information length actual list IDs may discovered cached, avoiding subsequent API calls. as_id_list() can used extract list IDs. Convert id_list web_history epost(). Convert web_history id_list as_id_list().","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/jentre-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jentre: Toolkit for the 'Entrez' API — jentre-package","title":"jentre: Toolkit for the 'Entrez' API — jentre-package","text":"use package effectively, understanding design Entrez API documented https://www.ncbi.nlm.nih.gov/books/NBK25500/. Helper functions make easier avoid common pitfalls, make use features like pagination, still need understand structure requests efficiently avoid undue load.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/jentre-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"jentre: Toolkit for the 'Entrez' API — jentre-package","text":"Entrez API usage subject guidelines available URL . Entrez datasets also subject copyright. Refer NCBI policies https://www.ncbi.nlm.nih.gov/home//policies/ details.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/jentre/reference/jentre-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jentre: Toolkit for the 'Entrez' API — jentre-package","text":"Maintainer: Carl Suster Carl.Suster@health.nsw.gov.au (ORCID) contributors: Western Sydney Local Health District, NSW Health [copyright holder]","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/topic-process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process API results — topic-process","title":"Process API results — topic-process","text":"Function turn parsed response document meaningful data. must accept one argument, doc, parsed response document. return value must compatible vctrs::list_unchop(), e.g. vector, list, data frame.","code":""},{"path":"https://cidm-ph.github.io/jentre/reference/topic-process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process API results — topic-process","text":"API results parsed based retmode parameter. XML documents parsed xml2::xml_document objects error raised contains <ERROR> node. Builtin processors can referred name instead specifying function. helpers provide additional processors, always available: \"identity\": Puts parsed output document list. multiple requests made (e.g. using batched APIs like efetch()) concatenated single list.","code":""}]
