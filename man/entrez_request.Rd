% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request.R
\name{entrez_request}
\alias{entrez_request}
\title{Construct a request to the Entrez API}
\usage{
entrez_request(
  endpoint,
  ...,
  .method = "GET",
  .multi = "comma",
  .cookies = NULL,
  .verbose = getOption("jentre.verbose", default = TRUE),
  .call = rlang::caller_env()
)
}
\arguments{
\item{endpoint}{Entrez endpoint name (e.g. \code{"efetch.fcgi"}).}

\item{...}{additional API parameters (refer to Entrez documentation).
Any set to \code{NULL} are removed.}

\item{.method}{HTTP verb.
For \code{"POST"}, any params with vector values (usually just \code{id}) are sent in the
request body instead of the URL.}

\item{.multi}{controls how repeated params are handled (see \code{\link[httr2:req_url]{httr2::req_url_query()}}).}

\item{.cookies}{path to persist cookies.
If \code{NULL}, cookies are not added to the request.
For helper functions: when \code{NA}, a temporary file is created (in this case only,
the temporary file will be cleaned up once all requests are performed).}

\item{.verbose}{logical: when TRUE logs all API requests as messages.
This uses a summarised format that does not include the request body for POST.
Use normal {httr} verbosity options to override and see more details.}

\item{.call}{call environment to use in error messages/traces.
You only need to specify this in internal helper functions that don't need to be
mentioned in error messages.}
}
\value{
\code{httr2::request} object.
}
\description{
This is a low-level helper that builds a request object but does not
perform the request. In general you'll likely use higher-level methods
like \code{\link[=efetch]{efetch()}} instead.
}
\details{
Some parameters have special handling:
\itemize{
\item \code{api_key} is copied from the \code{ENTREZ_KEY} environment variable if set.
\item \code{email} and \code{tool} are set to default values but can be overridden.
}
}
\section{API limits}{

The Entrez APIs are rate limited. Requests in this package try to respect the
limits (3/second, or 10/second when \code{api_key} is provided). Sometimes requests
still get rate limited, so they are retried up to 2 times (with backoff).
}

